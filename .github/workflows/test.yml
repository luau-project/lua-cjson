name: test

on: [push, pull_request]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        cc: ["gcc", "clang"]
        luaVersion: ["5.1", "5.2", "5.3", "5.4", "luajit", "luajit-openresty"]
        include:
          - luaVersion: "luajit"
            runtestArgs: "LUA_INCLUDE_DIR=.lua/include/luajit-2.1"
            runtestEnv: "SKIP_CMAKE=1"
          - luaVersion: "luajit-openresty"
            runtestArgs: "LUA_INCLUDE_DIR=.lua/include/luajit-2.1"
            runtestEnv: "SKIP_CMAKE=1"

    # due to 'luarocks/gh-actions-lua@master' caching,
    # keep 'runs-on' synced with 'runs-on' from
    # 'upload' job below
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@master

    - uses: luarocks/gh-actions-lua@master
      env:
        CC: ${{ matrix.cc }}
      with:
        luaVersion: ${{ matrix.luaVersion }}
        luaCompileFlags: CC=${{ matrix.cc }}

    - uses: luarocks/gh-actions-luarocks@master

    - name: runtests.sh
      env:
        CC: ${{ matrix.cc }}
      run: |
        LUA_DIR=.lua ${{ matrix.runtestEnv }} ./runtests.sh PREFIX=.lua ${{ matrix.runtestArgs }}

    - name: setup prove
      env:
        CC: ${{ matrix.cc }}
      run: |
        make PREFIX=.lua ${{ matrix.runtestArgs }}
        sudo apt-get update
        sudo apt-get install -q valgrind libipc-run3-perl cppcheck cpanminus
        sudo cpanm --notest Test::Base Test::LongString

    - name: cppcheck
      run: cppcheck -i .lua/ -i .install/ -i dtoa.c --force --error-exitcode=1 --enable=warning --inline-suppr .

    - name: prove
      run: LUA_BIN=lua prove -Itests tests

    - name: prove (valgrind)
      run: LUA_BIN=lua TEST_LUA_USE_VALGRIND=1 prove -Itests tests

    - name: build
      run: |
        luarocks make

  upload:
    name: Upload Rockspec

    # due to 'luarocks/gh-actions-lua@master' caching,
    # keep 'runs-on' synced with 'runs-on' from
    # 'test' job above
    runs-on: ubuntu-24.04

    needs: test
    if: ${{ github.repository == 'openresty/lua-cjson' && github.ref_type == 'tag' }}

    steps:
    - uses: actions/checkout@master
    - uses: luarocks/gh-actions-lua@master
    - uses: luarocks/gh-actions-luarocks@master
    
    - name: Set environment variable to hold the rockspec name to be uploaded
      run: |
        rockspec=$(find *.rockspec | head -n1);
        echo "ROCKSPEC=${rockspec}" >> "${{ github.env }}";
    
    - name: Make sure that tags from GitHub and rockspec are equal
      run: |
        rockspec_tag=$(lua -e "dofile(arg[0]); io.write(source.tag);" -- "${{ env.ROCKSPEC }}");
        github_tag="${{ github.ref_name }}";

        if [[ "${rockspec_tag}" != "${github_tag}" ]];
        then
          echo -e "\e[31mTag mismatch\e[0m: GitHub tag (\e[33m${github_tag}\e[0m) != rockspec tag (\e[33m${rockspec_tag}\e[0m)";
          exit 0;
        fi;
    
    - name: Install dependencies
      run: |
        sudo apt install -y libssl-dev;
        luarocks install luasocket;
        luarocks install luasec;

    - name: Upload to LuaRocks
      env:
        UPLOAD_KEY: "${{ secrets.LUAROCKS_APIKEY }}"
      run: |
        echo -e "Uploading rockspec: \e[36m${{ env.ROCKSPEC }}\e[0m";
        
        luarocks upload "${{ env.ROCKSPEC }}" "--temp-key" "$UPLOAD_KEY";